name: Build & Deploy Dashboard

on:
  push:
    branches:
      - main
jobs:
  build-and-deploy-dashboard:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      # üîê Docker login
      - name: üîê Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # üõ† Build dashboard Docker image
      - name: üèó Build Dashboard Docker Image
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dashboard:latest \
            --build-arg VITE_FIREBASE_API_KEY="$VITE_FIREBASE_API_KEY" \
            --build-arg VITE_FIREBASE_AUTH_DOMAIN="$VITE_FIREBASE_AUTH_DOMAIN" \
            --build-arg VITE_FIREBASE_PROJECT_ID="$VITE_FIREBASE_PROJECT_ID" \
            --build-arg VITE_FIREBASE_STORAGE_BUCKET="$VITE_FIREBASE_STORAGE_BUCKET" \
            --build-arg VITE_FIREBASE_MESSAGING_SENDER_ID="$VITE_FIREBASE_MESSAGING_SENDER_ID" \
            --build-arg VITE_FIREBASE_APP_ID="$VITE_FIREBASE_APP_ID" \
            --build-arg VITE_FIREBASE_MEASUREMENT_ID="$VITE_FIREBASE_MEASUREMENT_ID" .

      # üöÄ Push dashboard image to Docker Hub
      - name: üöÄ Push Dashboard Docker Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/dashboard:latest

      # üîÑ SSH into server and redeploy
      - name: üîÑ SSH and Deploy on Server
        env:
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no \
          ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'

            set -e
            echo "üîê Connected to server"

            cd /home/${{ secrets.SERVER_USER }}/mrbeas || {
              echo "‚ùå Failed to cd into project directory"
              exit 1
            }

            echo "‚¨áÔ∏è Pulling latest dashboard image..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/dashboard:latest

            echo "üîÅ Restarting dashboard container..."
            docker-compose up -d dashboard

            echo "‚úÖ Dashboard deployed!"
          EOF
