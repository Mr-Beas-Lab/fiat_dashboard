name: Build, Push Docker Image & Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # üîê Docker login
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # üõ† Build Docker image with Firebase env vars
      - name: Build Docker image
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
        run: |
          docker build \
            --build-arg VITE_FIREBASE_API_KEY=$VITE_FIREBASE_API_KEY \
            --build-arg VITE_FIREBASE_AUTH_DOMAIN=$VITE_FIREBASE_AUTH_DOMAIN \
            --build-arg VITE_FIREBASE_PROJECT_ID=$VITE_FIREBASE_PROJECT_ID \
            --build-arg VITE_FIREBASE_STORAGE_BUCKET=$VITE_FIREBASE_STORAGE_BUCKET \
            --build-arg VITE_FIREBASE_MESSAGING_SENDER_ID=$VITE_FIREBASE_MESSAGING_SENDER_ID \
            --build-arg VITE_FIREBASE_APP_ID=$VITE_FIREBASE_APP_ID \
            --build-arg VITE_FIREBASE_MEASUREMENT_ID=$VITE_FIREBASE_MEASUREMENT_ID \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/dashboard:latest .

      # üöÄ Push image to Docker Hub
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/dashboard:latest

      # üîÑ Deploy on remote Ubuntu server
      - name: SSH and deploy on server
        env:
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no \
          ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            set -e
            cd /home/million/mrbeas
            docker-compose down
            docker-compose pull
            docker-compose up -d
            echo "‚úÖ Deployment successful!"
          EOF
