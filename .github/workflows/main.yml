name: Deploy Frontend to Production

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            millionmulugeta/dashboard:latest
            millionmulugeta/dashboard:${{ github.sha }}
          build-args: |
            VITE_API_URL=https://backend-dashboard.mrbeas.net
            VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}
            VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
            VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}
            VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
            VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
            VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}
            VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.MEASUREMENTID }}
          cache-from: type=registry,ref=millionmulugeta/dashboard:buildcache
          cache-to: type=registry,ref=millionmulugeta/dashboard:buildcache,mode=max

      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            set -exo pipefail

            echo "🔐 Connecting to server..."
            cd /home/million/mrbeas/dashboard || { echo "❌ Directory not found"; exit 1; }

            # Force-free ports 80/443 (improved version)
            echo "🔍 Freeing ports 80 and 443..."
            sudo ss -tulnp | grep -E ':(80|443)\s' | awk '{print $NF}' | cut -d ',' -f 2 | xargs -r sudo kill -9 2>/dev/null || true
            sudo pkill -9 docker-proxy 2>/dev/null || true
            sudo iptables -t nat -F
            sudo systemctl restart docker
            sleep 3

            echo "⬇️ Pulling latest image..."
            docker pull millionmulugeta/dashboard:latest

            echo "🚀 Starting deployment..."
            docker-compose down --remove-orphans
            docker-compose up -d

            echo "⏳ Waiting for services..."
            sleep 30

            echo "✅ Deployment successful"
            docker-compose ps
            docker logs caddy_reverse_proxy --tail 20