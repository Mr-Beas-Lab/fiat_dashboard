name: Deploy to Production

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            millionmulugeta/api:latest
            millionmulugeta/api:${{ github.sha }}
          build-args: |
            NODE_ENV=production
          cache-from: type=registry,ref=millionmulugeta/api:buildcache
          cache-to: type=registry,ref=millionmulugeta/api:buildcache,mode=max

      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          timeout: 10m
          script: |
            #!/bin/bash
            set -exo pipefail

            # Setup environment
            DEPLOY_DIR="/home/million/glofica"
            LOG_FILE="/tmp/deploy_$(date +'%Y%m%d_%H%M%S').log"

            # Redirect output to log file
            exec > >(tee -a "$LOG_FILE") 2>&1

            echo "🔐 Starting deployment at $(date)"

            # Verify deployment directory
            if [ ! -d "$DEPLOY_DIR" ]; then
              echo "❌ Error: Deployment directory $DEPLOY_DIR not found"
              exit 1
            fi

            cd "$DEPLOY_DIR" || exit 1

            # Handle sudo authentication
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S true

            # Free ports 80/443
            echo "🔍 Freeing ports 80 and 443..."
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S ss -tulnp | grep -E ':(80|443)\s' | awk '{print $NF}' | cut -d ',' -f 2 | xargs -r sudo kill -9 2>/dev/null || true
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S pkill -9 docker-proxy 2>/dev/null || true
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S iptables -t nat -F
            echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S systemctl restart docker
            sleep 3

            # Verify and prepare .env file
            if [ ! -f .env ]; then
              echo "❌ .env file not found"
              exit 1
            fi

            echo "📝 Preparing .env file..."
            # Normalize line endings and format
            sudo sed -i 's/\r$//' .env
            sudo sed -i '/^$/d;/^#/d' .env
            sudo sed -i -e '$a\' .env

            # Pull latest image
            echo "⬇️ Pulling latest Docker image..."
            docker pull millionmulugeta/api:latest

            # Start deployment
            echo "🚀 Starting containers..."
            docker-compose down --remove-orphans
            docker-compose up -d

            # Verify deployment
            echo "⏳ Waiting for services to start..."
            sleep 30

            echo "✅ Deployment verification:"
            docker-compose ps

            echo "📝 Caddy logs:"
            docker logs caddy --tail 20

            echo "🏁 Deployment completed successfully at $(date)"
            exit 0